public class lesson_15_09 {
    //Порядок блоков catch

    //Исключение, возникшее в блоке try, может быть захвачено только одним блоком catch.
    //Не может быть ситуации, что при обработке исключения выполнился код из нескольких блоков catch.
    //Однако порядок блоков имеет значение.
    //Может быть ситуация, когда исключение захвачено несколькими блоками.
    //В этом случае оно будет захвачено блоком catch, который идет раньше (ближе к блоку try).
    //Как же может возникнуть ситуация, что одно исключение могут захватить несколько блоков catch?
    //Все исключения объединены в единую иерархию с помощью наследования

    //Объект-исключение типа ArithmeticException может быть присвоен переменной типа ArithmeticException,
    //а также переменным его классов-предков: RuntimeException, Exception и Throwable

    //Вот этот код будет отлично компилироваться:
    //ArithmeticException ae    = new ArithmeticException();
    //RuntimeException runtime  = new ArithmeticException();
    //Exception exception       = new ArithmeticException();
    //Throwable trwbl           = new ArithmeticException();

    //Поэтому и перехватить исключение типа ArithmeticException можно блоками catch любым из 4-х приведенных выше типов.

    //Чтобы не было неожиданностей, лучше всего блоки catch, которые могут захватить почти все исключения,
    //размещать ближе к концу списка блоков catch.
    //Тип Throwable вообще способен перехватывать все возможные исключения в Java,
    //если его разместить в первом блоке catch - код не скомпилируется, так как компилятор понимает, что в коде есть недосягаемые блоки кода.
}
