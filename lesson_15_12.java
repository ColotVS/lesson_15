public class lesson_15_12 {
    //Ключевое слово finally

    //Иногда программисту нужно сделать некоторые действия независимо от того, было исключение в коде или нет.
    //Например, в коде мы открыли файл на запись,
    //а открытый файл нужно обязательно закрыть вызовом метода close().

    /*
    try
    {
        код, где может возникнуть ошибка
    }
    catch(ТипИсключения имя)
    {
        код обработки исключения
    }
    finally
    {
        код, который нужно выполнить в любом случае
    }
     */

    //Для выполнения таких обязательных действий к оператору try-catch
    //добавили еще один блок — finally, и получился оператор try-catch-finally

    //
    /*
    FileInputStream source = null;
    try
    {
        source = new FileInputStream("c:\\note.txt");
        source.read();
    }
    catch(Exception except)
    {
        System.out.println("Перехватили исключение");
        throw except;
    }
    finally
    {
        if (source != null)
            source.close();
    }
     */

    //Код в блоке finally выполнится в любом случае независимо от того, было исключение или не было.
    //Даже если исключение возникло, и оно не было перехвачено, блок finally все равно выполнится.
    //
    //Кстати, если вы не хотите перехватывать исключение, а блок finally вам нужен,
    //используйте сокращенную запись блока try-catch-finally — try-finally. Выглядит это примерно так:
    /*
    try
    {
        код, где может возникнуть ошибка
    }
    finally
    {
        код, который нужно выполнить в любом случае
    }
     */
}
